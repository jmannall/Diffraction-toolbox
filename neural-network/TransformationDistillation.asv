clear all
close all

load(['NNSaves', filesep, 'IIR-10000_0001-1-09-099-5.mat'])

fs = 96e3;
nfft = 16384;
c = 344;
controlparameters = struct('fs', fs, 'nfft', nfft, 'difforder', 1, 'c', c, 'saveFiles', 2);

psi = rand(8, 10);
psiInv = pinv(psi);
epochSize = 20e3;
[trainingData, targetData, ~, ~, fidx] = CreateBtmTrainingData(epochSize, controlparameters, epochSize);

dataFunc = @(idx)CreateBtmTrainingData(epochSize, controlparameters, idx);
numIIRFilters = 2;
filterFunc = @(output, target)IIRFilterLoss(output, target, numIIRFilters, nfft, fs, fidx);
NNlossFunc = @(net, trainingData, targetData)NNFilterLoss(net, trainingData, targetData, filterFunc, false);
lossFunc = @()TransformationLossFunc(net, trainingData, targetData)
miniBatchSize = 128;
numEpochs = 10;
w = trainingData' * psi;
xHat = (w * psiInv)';
r = trainingData - xHat;
input = xHat + r;

outputs = predict(net, input);

[psi, epochLosses, losses] = TrainTransformation(net, trainingData, targetData, numEpochs, miniBatchSize, numIterationsPerEpoch, lossFunc, dataFunc);
